variables:
  buildConfiguration: 'Release'
jobs:
  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
      displayName: 'Prepare analysis on SonarCloud'
      inputs:
        SonarCloud: SonarCloud
        organization: 'jpdillingham-github'
        projectKey: 'jpdillingham_Soulseek.NET'
        projectName: Soulseek.NET
        extraProperties: |
          sonar.cs.cobertura.reportsPaths=$(Build.SourcesDirectory)/out/Coverage/coverage.cobertura.xml
    - powershell: |
        .\build.ps1 -Target "BuildWithCoverageReport"
      displayName: 'Run build script'
    - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
      displayName: 'Run SonarCloud code analysis'
    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: 'out/TestResults/**/*.trx'
      displayName: 'Publish test results'
    - task: PublishCodeCoverageResults@1
      inputs:
        summaryFileLocation: $(Build.SourcesDirectory)/out/Coverage/coverage.cobertura.xml
        reportDirectory: $(Build.SourcesDirectory)/out/CoverageReport
        codecoverageTool: cobertura
      displayName: 'Publish code coverage report'
    - script: |
        %USERPROFILE%\.nuget\packages\codecov\1.1.0\tools\codecov.exe -f $(Build.SourcesDirectory)/out/Coverage/coverage.cobertura.xml -t $(CODECOV_TOKEN)
      displayName: 'Upload coverage to codecov.io'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: './out/Packages/'
        ArtifactName: Packages
        ArtifactType: Container
  - job: Linux
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - task: ShellScript@2
      inputs:
        scriptPath: build.sh
      displayName: 'Run build script'
    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: 'out/TestResults/**/*.trx'
      displayName: 'Publish test results'